#! /usr/bin/bash

while [[ 1 < 2 ]]
do
  read ch1 operation ch2
  ans=""
  if [[ $ch1 == "exit" ]] ; then
    echo "bye"
    break
  fi
  
  if [[ $operation == "+" ]] ; then
    let "ans = ch1 + ch2"
  fi
  
  if [[ $operation == "-" ]] ; then
    let "ans = ch1 - ch2"
  fi
  
  if [[ $operation == "*" ]] ; then
    let "ans = ch1 * ch2"
  fi
  
  if [[ $operation == "/" ]] ; then
    let "ans = ch1 / ch2"
  fi
  
  if [[ $operation == "%" ]] ; then
    let "ans = ch1 % ch2"
  fi
  
  if [[ $operation == "**" ]] ; then
    let "ans = ch1 ** ch2"
  fi
    
  if [[ $ans == "" ]] ; then
    echo "error"
    break 
  fi
  
  echo "$ans"
done

#Напишите калькулятор на bash. При запуске ваш скрипт 
#должен ожидать ввода пользователем команды (при этом на 
#экран выводить ничего не нужно). Команды могут быть трех 
#типов: 
#
#Слово "exit". В этом случае скрипт должен вывести на 
#экран слово "bye" и завершить работу. 
#Три аргумента через пробел -- первый операнд (целое 
#число), операция (одна из "+", "-", "*", "/", "%", "**") 
#и второй операнд (целое число). В этом случае нужно 
#произвести указанную операцию над заданными числами и 
#вывести результат на экран. После этого переходим в режим 
#ожидания новой команды.
#Любая другая команда из одного аргумента или из трех 
#аргументов, но с операцией не из списка. В этом случае 
#нужно вывести на экран слово "error" и завершить работу.
#Чтобы проверить работу скрипта, вы можете записать сразу 
#несколько команд в файл и передать его скрипту на stdin 
#(т.е. выполнить ./script.sh < input.txt). В этом случае 
#он должен вывести сразу все ответы на экран.
#
#Например, если входной файл будет следующего содержания:
#10 + 1
#2 ** 10
#exit
#
#то на экране будет:
#11
#1024
#bye
#
